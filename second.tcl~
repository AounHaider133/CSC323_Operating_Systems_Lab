#create simulator
set ns [new Simulator]

set nf [open out.nam w]
$ns namtrace-all $nf

proc finish {} {
 global ns nf
 $ns flush-trace
 close $nf
 exec nam out.nam &
 return 0
}

#create nodes
set n0 [$ns node]
set n1 [$ns node]
set n2 [$ns node]
set n3 [$ns node]

#set int [$n3 link0 interface3]
#$int queue-limit 10

$ns duplex-link $n0 $n2 1Mb 10ms DropTail
$ns duplex-link $n1 $n2 1Mb 10ms DropTail
$ns duplex-link $n2 $n3 1Mb 10ms DropTail

#change orientation
$ns duplex-link-op $n0 $n2 orient right-down
$ns duplex-link-op $n1 $n2 orient right
$ns duplex-link-op $n2 $n3 orient right-up
$ns duplex-link $n3 $n2 1Mb 10ms SFQ

#set drop policy to improve network performance
$ns duplex-link-op $n2 $n3 queuePos 0.5

#stochastic fair queueing (SFQ)
$ns duplex-link $n2 $n3 1Mb 10ms SFQ

#set colors
$ns color 1 Blue
$ns color 2 Red
#$ns duplex-link $n0 $n1 1Mb 10ms DropTail

#create a udp agent
set udp0 [new Agent/UDP]
$ns attach-agent $n0 $udp0

set cbr0 [new Application/Traffic/CBR]
$cbr0 set packetsize_ 500
$cbr0 set interval_ 0.005
$cbr0 attach-agent $udp0

set udp1 [new Agent/UDP]
$ns attach-agent $n1 $udp1

set cbr1 [new Application/Traffic/CBR]
$cbr1 set packetsize_ 500
$cbr1 set interval_ 0.005
$cbr1 attach-agent $udp1

set null [new Agent/Null]
$ns attach-agent $n3 $null

$ns connect $udp0 $null
$ns connect $udp1 $null

$udp0 set class_ 1
$udp1 set class_ 2

#set simulation time
$ns at 0.5 "$cbr0 start"
$ns at 1.0 "$cbr1 start"
$ns at 4.0 "$cbr1 stop"
$ns at 4.5 "$cbr0 stop"

#call finish routine and execute
$ns at 5.0 "finish"
$ns run
